// Implemented 2 Stack in Array
#include<iostream>
using namespace std;

class Stack{
  public:
  int *arr;
  int size;
  int top1;
  int top2;

  Stack(int size){
    arr = new int[size];
    this->size = size;
    this->top1 = -1;
    this->top2 = size;
  }

  // please add underfolw and overfow conditions
  // push 
  void push1(int data){
    // overflow
    if(top2-top1 == 1){
      cout<<"OVERFLOW:"<<endl;
    }
    else{
          top1++;
          arr[top1] = data;
    }
  }

  void push2(int data){
    // overflow
    if(top2-top1 == 1){
      cout<<"OVERFLOW"<<endl;
    }
    else{
      top2--;
      arr[top2] = data;
    }
  }

  // pop
  void pop1(){
    // undeflow
    if(top1 == -1){
      cout<<"UNDERFLOW"<<endl;
    }
    else{
      arr[top1] = 0;
      top1--;
    }

  }
  void pop2(){
    // underflow
    if(top2 == size){
      cout<<"UNDERFLOW:"<<endl;
    }
    arr[top2] = 0;
    top2++;
  }

  void print(){
    for(int i=0; i<size; i++){
      cout<<arr[i]<<" ";
    }
    cout<<endl;
  }

};
int main(){
  Stack st(6);
  st.print();

  st.push1(10);
  st.print();
  st.push1(20);
  st.print();
  st.push1(30);
  st.print();
  st.push1(40);
  st.print();

  st.push2(100);
  st.print();
  st.push2(200);
  st.print();
  st.push2(300);
  st.print();
}